"use strict"; function _classCallCheck(e, t) { if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function"); } function _defineProperties(e, t) { for (var r = 0; r < t.length; r++) { var n = t[ r ]; n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n); } } function _createClass(e, t, r) { return t && _defineProperties(e.prototype, t), r && _defineProperties(e, r), e; } function ownKeys(t, e) { var r, n = Object.keys(t); return Object.getOwnPropertySymbols && (r = Object.getOwnPropertySymbols(t), e && (r = r.filter(function (e) { return Object.getOwnPropertyDescriptor(t, e).enumerable; })), n.push.apply(n, r)), n; } function _objectSpread(t) { for (var e = 1; e < arguments.length; e++) { var r = null != arguments[ e ] ? arguments[ e ] : {}; e % 2 ? ownKeys(Object(r), !0).forEach(function (e) { _defineProperty(t, e, r[ e ]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(r)) : ownKeys(Object(r)).forEach(function (e) { Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(r, e)); }); } return t; } function _defineProperty(e, t, r) { return t in e ? Object.defineProperty(e, t, { value: r, enumerable: !0, configurable: !0, writable: !0 }) : e[ t ] = r, e; } function _typeof(e) { return (_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (e) { return typeof e; } : function (e) { return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e; })(e); } Object.defineProperty(exports, "__esModule", { value: !0 }), exports.loadImg = loadImg, exports.loadOnScroll = loadOnScroll; var images = require("./../../src/assets/**/*.*"), getDictionary = function o(i, e) { var a, s = 1 < arguments.length && void 0 !== e ? e : "", c = {}; for (var t in i) { !function (t) { var e = i[ t ], r = "string" == typeof (a = Object.keys(i[ t ]).map(function (e) { return i[ t ][ e ]; }))[ 0 ], n = "object" === _typeof(a[ 0 ]); r ? c[ s + t + "." + Object.keys(e)[ 0 ] ] = e[ Object.keys(e)[ 0 ] ] : n && (c = _objectSpread(_objectSpread({}, c), o(e, s + t + "/"))); }(t); } return c; }, dictionary = getDictionary(images), Loader = function () { function r(e) { var t = 1 < arguments.length && void 0 !== arguments[ 1 ] ? arguments[ 1 ] : {}; _classCallCheck(this, r), this.targets = e, this.imgElements = [], this.obsOptions = t; } return _createClass(r, [ { key: "getSrc", value: function (e) { return dictionary[ e ] || e; } }, { key: "getSrcset", value: function (e) { return e.split(",").reduce(function (e, t) { var r = t.slice(0, t.lastIndexOf(" ")).trim(), n = t.slice(t.lastIndexOf(" ") + 1); return console.log("src:", r, "size:", n), "".concat(e && e + ",", " ").concat(dictionary[ r ], " ").concat(n); }, ""); } }, { key: "toArray", value: function () { return "string" == typeof this.targets ? this.imgElements = [].slice.call(document.querySelectorAll(this.targets)) : this.targets.length ? this.imgElements = [].slice.call(this.targets) : this.imgElements = [ this.targets ], this; } }, { key: "attachObserver", value: function () { var t = this; if (!("IntersectionObserver" in window)) return setTimeout(function () { return t.loadAll(); }, 17), this; var r = this, e = this.obsOptions, n = e.root, o = e.rootMargin, i = void 0 === o ? "500px 500px 500px 500px" : o, a = e.threshold, s = void 0 === a ? .01 : a; return this.observer = new IntersectionObserver(function (e) { var t = this; e.forEach(function (e) { 0 < e.intersectionRatio && (t.unobserve(e.target), r.loadSingle(e.target), r.obsCallback && r.obsCallback(e)); }); }, { root: n, rootMargin: i, threshold: s }), this.imgElements.forEach(function (e) { return t.observer.observe(e); }), this; } }, { key: "loadAll", value: function () { var r = this, e = this.imgElements.reduce(function (e, t) { return e.push(r.loadSingle(t)), e; }, []); return "Promise" in window ? Promise.all(e) : this; } }, { key: "loadSingle", value: function (n) { var o = this, i = document.createElement("IMG"), a = "Could not load <img "; return [].slice.call(n.attributes).forEach(function (e) { var t = e.name, r = e.value; a += "".concat(t, '="').concat(r, '" '), "src" !== t && "data-src" !== t && "data-srcset" !== t && i.setAttribute(t, r); }), a += "/>", n.dataset.src && (i.src = this.getSrc(n.dataset.src)), n.dataset.srcset && (i.srcset = this.getSrcset(n.dataset.srcset)), console.log(i), "Promise" in window ? new Promise(function (t, r) { i.addEventListener("load", function (e) { n.parentNode.replaceChild(i, n), o.onLoadCallback && o.onLoadCallback(e), t(i); }), i.addEventListener("error", function (e) { e.message = a, o.onErrorCallback && o.onErrorCallback(e), r(e); }); }) : (n.parentNode.replaceChild(i, n), console.log("no promise"), this.onLoadCallback && i.addEventListener("load", this.onLoadCallback), void (this.onErrorCallback && i.addEventListener("error", function (e) { e.message = a, o.onErrorCallback(e); }))); } }, { key: "onIntersection", value: function (e) { return this.obsCallback = e, this; } }, { key: "onLoad", value: function (e) { return this.onLoadCallback = e, this; } }, { key: "onError", value: function (e) { return this.onErrorCallback = e, this; } } ]), r; }(); function loadImg(e) { return new Loader(e).toArray().loadAll(); } function loadOnScroll(e) { return new Loader(e, 1 < arguments.length && void 0 !== arguments[ 1 ] ? arguments[ 1 ] : {}).toArray().attachObserver(); }